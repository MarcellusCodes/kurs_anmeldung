import type { NextPage, GetServerSideProps } from "next";
import { useState } from "react";
import Head from "next/head";
import Image from "next/image";
import {
  NavBar,
  PrimaryButton,
  NavButton,
  PrimaryTitle,
  Info,
  InfoItem,
  Course,
  CourseSection,
  LayoutContainer,
} from "../src/components/index";
import { ShieldLock, Help, Bell, School } from "tabler-icons-react";
import {
  Container,
  Title,
  Group,
  useMantineTheme,
  List,
  Divider,
  Space,
} from "@mantine/core";
import axios from "axios";
import { useQuery, useMutation } from "react-query";
import { GetCourses, GetInformations } from "../src/queries/index";
import { courseFilterButtons } from "../src/utils/index";

const Home: NextPage = ({ courses, information }) => {
  const theme = useMantineTheme();
  const [courseFilter, setCourseFilter] = useState("");

  const coursesQuery = useQuery("courses", () => GetCourses(), {
    initialData: courses,
  });

  const informationsQuery = useQuery("information", () => GetInformations(), {
    initialData: information,
  });

  return (
    <>
      <Head>
        <title>DRK Rostock Kurs Anmeldung</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <NavBar />
      <LayoutContainer>
        <header>
          <PrimaryTitle
            icon={
              <Bell size={36} strokeWidth={2} color={theme.colors.red[6]} />
            }
            title={"Hinweise"}
          />
          <Info
            sx={(theme) => ({
              marginTop: "2rem",
            })}
            spacing="sm"
            type="ordered"
            size="xl"
          >
            {informationsQuery.data.data &&
              informationsQuery.data.data.map((info) => (
                <InfoItem key={info.id}>{info.information}</InfoItem>
              ))}
          </Info>
          <Divider my="2rem" size="sm" />
        </header>
        <PrimaryTitle
          icon={
            <School size={36} strokeWidth={2} color={theme.colors.red[6]} />
          }
          title={"Kurse"}
        />
        <Space h="2rem" />
        <Group>
          {courseFilterButtons.map((button) => (
            <PrimaryButton
              key={button.id}
              color={"red"}
              compact={false}
              disabled={false}
              fullWidth={false}
              leftIcon={undefined}
              loading={false}
              size={"md"}
              uppercase={false}
              type={"button"}
              variant={button.filter === courseFilter ? "filled" : "outline"}
              onClick={() => {
                setCourseFilter(button.filter);
              }}
            >
              {button.title}
            </PrimaryButton>
          ))}
        </Group>
        {courseFilter === "" ? (
          <>
            <CourseSection
              title={"Excel Grundlagen"}
              courses={coursesQuery.data.data}
              difficulty="Grundlagen"
            />

            <CourseSection
              title={"Excel Aufbau I"}
              courses={coursesQuery.data.data}
              difficulty="Aufbau I"
            />
            <CourseSection
              title={"Excel Aufbau II"}
              courses={coursesQuery.data.data}
              difficulty="Aufbau II"
            />
            <CourseSection
              title={"Excel Aufbau III"}
              courses={coursesQuery.data.data}
              difficulty="Aufbau III"
            />
          </>
        ) : (
          <CourseSection
            title={`Excel ${courseFilter}`}
            courses={coursesQuery.data.data}
            difficulty={courseFilter}
          />
        )}
      </LayoutContainer>
    </>
  );
};

export default Home;

export const getServerSideProps: GetServerSideProps = async (context) => {
  const courses_response = await GetCourses();

  const information_response = await GetInformations();
  const information = await information_response.data;
  const courses = await courses_response.data;

  return { props: { courses, information } };
};
